
/* SP para agregar registro en la tabla Empresa */
CREATE PROCEDURE SP_InsertEmpresa
@RUC_EMP VARCHAR(11),
@RAZSOC_EMP VARCHAR(200),
@DIR_EMP VARCHAR(200),
@COD_UBI VARCHAR(6)
AS 
	BEGIN
		IF(SELECT RUC_EMP from EMPRESA WHERE RUC_EMP = @RUC_EMP) IS NOT NULL
			SELECT 'RUC EXISTE' AS 'RESULTADO'
		ELSE
			INSERT INTO EMPRESA (RUC_EMP, RAZSOC_EMP, DIR_EMP, COD_UBI)
			VALUES (@RUC_EMP, UPPER(@RAZSOC_EMP), UPPER(@DIR_EMP), @COD_UBI)
	END
GO

/* SP para modificar registro en la tabla Empresa */
CREATE PROCEDURE SP_UpdateEmpresa
@COD_EMP INT,
@RUC_EMP VARCHAR(11),
@RAZSOC_EMP VARCHAR(200),
@DIR_EMP VARCHAR(200),
@COD_UBI VARCHAR (6)
AS
	BEGIN 
		UPDATE EMPRESA SET 
		RUC_EMP=@RUC_EMP,RAZSOC_EMP=UPPER(@RAZSOC_EMP),DIR_EMP=UPPER(@DIR_EMP), COD_UBI=@COD_UBI WHERE COD_EMP=@COD_EMP
	END
GO

/* SP para eliminar registro en la tabla Empresa */
CREATE procedure SP_DeleteEmpresa
@COD_EMP INT 
AS
	BEGIN 
		DELETE FROM EMPRESA 
		WHERE COD_EMP=@COD_EMP
	END
GO

/* SP para listar registros en la tabla Empresa */
CREATE PROCEDURE SP_ListEmpresa
AS
	BEGIN
		SELECT * FROM VW_EMPRESAS
		ORDER BY COD_EMP DESC
	END
GO


/* SP para agregar registro en la tabla Cliente */
CREATE PROCEDURE SP_InsertCliente
@RUC_CLI VARCHAR(11),
@RAZSOC_CLI VARCHAR(200),
@DIR_CLI VARCHAR(200),
@COD_UBI VARCHAR(6)
AS 
	BEGIN
		IF(SELECT RUC_CLI from CLIENTE WHERE RUC_CLI = @RUC_CLI) IS NOT NULL
			SELECT 'RUC EXISTE' AS 'RESULTADO'
		ELSE
			INSERT INTO CLIENTE (RUC_CLI, RAZSOC_CLI, DIR_CLI, COD_UBI)
			VALUES (@RUC_CLI, UPPER(@RAZSOC_CLI), UPPER(@DIR_CLI), @COD_UBI)
	END
GO

/* SP para modificar registro en la tabla Cliente */
CREATE PROCEDURE SP_UpdateCliente
@COD_CLI INT,
@RUC_CLI VARCHAR(11),
@RAZSOC_CLI VARCHAR(200),
@DIR_CLI VARCHAR(200),
@COD_UBI VARCHAR (6)
AS
	BEGIN 
		UPDATE CLIENTE SET 
		RUC_CLI=@RUC_CLI,RAZSOC_CLI=UPPER(@RAZSOC_CLI),DIR_CLI=UPPER(@DIR_CLI), COD_UBI=@COD_UBI WHERE COD_CLI=@COD_CLI
	END
GO

/* SP para eliminar registro en la tabla Cliente */
CREATE procedure SP_DeleteCliente
@COD_CLI INT 
AS
	BEGIN 
		DELETE FROM CLIENTE 
		WHERE COD_CLI=@COD_CLI
	END
GO

/* SP para listar registros en la tabla Cliente */
CREATE PROCEDURE SP_ListCliente
AS
	BEGIN
		SELECT * FROM VW_CLIENTES
		ORDER BY COD_CLI DESC
	END
GO

/* SP para agregar registro en la tabla Moneda */
CREATE PROCEDURE SP_InsertMoneda
@NOM_MON VARCHAR(20),
@CAM_MON DECIMAL(6,4),
@FEC_MON DATE
AS 
	BEGIN
		IF(SELECT NOM_MON from MONEDA WHERE NOM_MON = @NOM_MON) IS NOT NULL
			SELECT 'MONEDA EXISTENTE' AS 'RESULTADO'
		ELSE
			INSERT INTO MONEDA (NOM_MON, CAM_MON, FEC_MON)
			VALUES (UPPER(@NOM_MON), @CAM_MON, FORMAT(CONVERT(DATE, @FEC_MON, 103), 'd', 'en-gb'))
	END
GO

/* SP para modificar registro en la tabla Moneda */
CREATE procedure SP_UpdateMoneda
@COD_MON INT,
@NOM_MON VARCHAR (20),
@CAM_MON DECIMAL(6,4),
@FEC_MON DATE
AS
	BEGIN 
		UPDATE MONEDA SET 
		NOM_MON=UPPER(@NOM_MON), CAM_MON=@CAM_MON, FEC_MON=FORMAT(CONVERT(DATE, @FEC_MON, 103), 'd', 'en-gb') WHERE COD_MON=@COD_MON
	END
GO

/* SP para eliminar registro en la tabla Moneda */
CREATE procedure SP_DeleteMoneda
@COD_MON INT 
AS
	BEGIN 
		DELETE FROM MONEDA 
		WHERE COD_MON=@COD_MON
	END
GO

/* SP para listar registros en la tabla Moneda */
CREATE PROCEDURE SP_ListMoneda
AS
	BEGIN
		SELECT COD_MON, UPPER(NOM_MON) AS 'NOM_MON', UPPER(CAM_MON) AS 'CAM_MON', FORMAT(FEC_MON, 'dd/MM/yyyy') AS 'FEC_MON'
		FROM MONEDA
		ORDER BY COD_MON DESC
	END
GO

/* SP para agregar registro en la tabla Medida */
CREATE PROCEDURE SP_InsertMedida
@NOM_MED VARCHAR(20)
AS 
	BEGIN
		IF(SELECT NOM_MED from MEDIDA WHERE NOM_MED = @NOM_MED) IS NOT NULL
			SELECT 'UNIDA DE MEDIDA EXISTENTE' AS 'RESULTADO'
		ELSE
			INSERT INTO MEDIDA (NOM_MED)
			VALUES (UPPER(@NOM_MED))
	END
GO

/* SP para modificar registro en la tabla Medida */
CREATE PROCEDURE SP_UpdateMedida
@COD_MED INT,
@NOM_MED VARCHAR(20)
AS
	BEGIN 
		UPDATE MEDIDA SET 
		NOM_MED=UPPER(@NOM_MED) WHERE COD_MED=@COD_MED
	END
GO

/* SP para eliminar registro en la tabla Medida */
CREATE procedure SP_DeleteMedida
@COD_MED INT 
AS
	BEGIN 
		DELETE FROM MEDIDA 
		WHERE COD_MED=@COD_MED
	END
GO

/* SP para listar registros en la tabla Medida */
CREATE PROCEDURE SP_ListMedida
AS
	BEGIN
		SELECT * FROM MEDIDA
		ORDER BY COD_MED DESC
	END
GO

/* SP para agregar registro en la tabla Detalle */
CREATE PROCEDURE SP_InsertDetalle
@TIP_DET VARCHAR(1),
@DES_DET VARCHAR(100),
@CDG_DET VARCHAR(20),
@PRE_DET DECIMAL(6,2),
@CAN_DET INT,
@DTO_DET DECIMAL(6,2),
@IGV_DET DECIMAL(6,2),
@ISC_DET DECIMAL(6,2),
@IMP_DET DECIMAL(7,2),
@COD_DOC INT,
@COD_MED INT
AS 
	BEGIN
			INSERT INTO DETALLE (TIP_DET, DES_DET, CDG_DET, PRE_DET, CAN_DET, DTO_DET, IGV_DET, ISC_DET, IMP_DET, COD_DOC, COD_MED)
			VALUES (@TIP_DET, UPPER(@DES_DET), UPPER(@CDG_DET), @PRE_DET, @CAN_DET, @DTO_DET, @IGV_DET, @ISC_DET, @IMP_DET, @COD_DOC, @COD_MED)
	END
GO

/* SP para listar registros en la tabla Detalle */
CREATE PROCEDURE SP_ListDetalle

AS 
	BEGIN
			SELECT COD_DET, TIP_DET, UPPER(DES_DET) AS 'DES_DET', UPPER(CDG_DET) AS 'CDG_DET', PRE_DET, CAN_DET, DTO_DET, IGV_DET, ISC_DET, IMP_DET, COD_DOC, COD_MED 
			FROM DETALLE
			ORDER BY COD_DET DESC
	END
GO

/* SP para guardar registro en la tabla Documento */
CREATE PROCEDURE SP_InsertDocumento
@EST_DOC VARCHAR(1),
@FECEMI_DOC DATE,
@FECVEN_DOC DATE,
@ANT_DOC DECIMAL(6,2),
@DTO_DET DECIMAL(6,2),
@VALVEN_DOC DECIMAL(6,2),
@ISC_DOC DECIMAL(6,2),
@OTRCAR_DOC DECIMAL(6,2),
@OTRTRI_DOC DECIMAL(6,2),
@TOT_DOC DECIMAL(6,2),
@IGV_DOC DECIMAL(6,2),
@COD_MON INT,
@COD_CLI INT,
@COD_EMP INT
AS
	BEGIN
		INSERT INTO DOCUMENTO(EST_DOC, FECEMI_DOC, FECVEN_DOC, ANT_DOC, DTO_DOC, VALVEN_DOC, ISC_DOC, 
		OTRCAR_DOC, OTRTRI_DOC, TOT_DOC, IGV_DOC, COD_MON, COD_CLI, COD_EMP)
		VALUES(@EST_DOC, FORMAT(CONVERT(DATE, @FECEMI_DOC, 103), 'd', 'en-gb'), FORMAT(CONVERT(DATE, @FECVEN_DOC, 103), 'd', 'en-gb'), 
		@ANT_DOC, @DTO_DET, @VALVEN_DOC, @ISC_DOC, @OTRCAR_DOC, @OTRTRI_DOC, @TOT_DOC, @IGV_DOC, @COD_MON, @COD_CLI, @COD_EMP)
	END
GO

/* SP para agregar registro en la tabla Usuario */
CREATE PROCEDURE SP_InsertUsuario
@NOM_USU VARCHAR(50),
@CON_USU VARCHAR(50),
@TIP_USU VARCHAR(1),
@EST_USU VARCHAR(1)
AS 
	BEGIN
		IF(SELECT NOM_USU from USUARIO WHERE NOM_USU = @NOM_USU) IS NOT NULL
			SELECT 'USUARIO EXISTE' AS 'RESULTADO'
		ELSE
			INSERT INTO USUARIO (NOM_USU, CON_USU, TIP_USU, EST_USU)
			VALUES (@NOM_USU, @CON_USU, UPPER(@TIP_USU), UPPER(@EST_USU))
	END
GO

CREATE PROCEDURE SP_UpdateUsuario
@COD_USU INT,
@CON_USU VARCHAR(50),
@TIP_USU VARCHAR(1),
@EST_USU VARCHAR(1)
AS
	BEGIN 
		UPDATE USUARIO SET 
		CON_USU=@CON_USU, TIP_USU=UPPER(@TIP_USU), EST_USU=UPPER(@EST_USU) WHERE COD_USU=@COD_USU
	END
GO

CREATE procedure SP_DeleteUsuario
@COD_USU INT 
AS
	BEGIN 
		DELETE FROM USUARIO 
		WHERE COD_USU=@COD_USU
	END
GO

CREATE PROCEDURE SP_ListUsuario
AS
	BEGIN
		SELECT * FROM USUARIO
		ORDER BY COD_USU DESC
	END
GO